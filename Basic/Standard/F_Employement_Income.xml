<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="F_Employement_Income" script:language="StarBasic">&apos;*************************************
&apos;Add Row Functionality
&apos;F_Employment_Income
&apos;Case : Self
&apos;*************************************
Sub addRow_F_Employement_IncomeList()
	notCallListener = true
    Call InsertRowsAndFillFormulas(&quot;EmpIncome.ListS&quot;)
    &apos;Add All Remove Listeners
    call removeKRAListners(fPinOfEmployer_Listener,fPinOfEmployer)
    &apos;Add All Add Listeners
	call addKRAListnersMultiCell(&quot;F_Employment_Income&quot;,&quot;EmpIncome.ListS&quot;,&quot;A&quot;,&quot;fPinOfEmployer_Listener_&quot;,fPinOfEmployer_Listener,fPinOfEmployer)	
	call resetSpecificRangeWithList(&quot;F_Employment_Income&quot;,&quot;PINofEmployerS&quot;,&quot;EmpIncome.ListS&quot;)
	call resetSpecificRangeWithList(&quot;F_Employment_Income&quot;,&quot;NameofEmployerS&quot;,&quot;EmpIncome.ListS&quot;)
	Call resetDataValidity(&quot;I_Computation_of_Car_Benefit&quot;,&quot;CarBenefit.ListS&quot;,&quot;A&quot;,&quot;PINofEmployerS&quot;)
	Call resetDataValidity(&quot;M_Details_of_PAYE_Deducted&quot;,&quot;PayeDed.ListS&quot;,&quot;A&quot;,&quot;PINofEmployerS&quot;)
    notCallListener = false
End Sub

Sub resetDataValidity(sheetName as String,rangeName as String,columnName as String,setValiditySource as String)
	Dim oCel As Object
	Dim oValidation As Object
	Dim sheet as Object
	
		oRange = ThisComponent.NamedRanges.getByName(rangeName)
	    startRowNum = oRange.getReferredCells().getRangeAddress().StartRow
	    endRowNum = oRange.getReferredCells().getRangeAddress().EndRow
		sheet=ThisComponent.sheets.getByName(sheetName)
		oColRange = sheet.getCellrangeByName(columnName &amp;(startRowNum+1) &amp; &quot;:&quot; &amp; columnName &amp;(endRowNum+1))
		
		Dim pinNoObject as Object
	&apos;***
		for i = startRowNum to endRowNum
			row=i
			pinNoObject=sheet.getCellrangeByName(columnName &amp; (row+1) &amp; &quot;:&quot; &amp; columnName &amp;(row+1))
		    oValidation = pinNoObject.getPropertyValue(&quot;Validation&quot;)
		    With oValidation
		      .Type = com.sun.star.sheet.ValidationType.LIST
		      .setFormula1 (setValiditySource)
			End With 
			pinNoObject.setPropertyValue(&quot;Validation&quot;, oValidation)  
		Next
End sub


&apos;*************************************
&apos;Check on Pin Of Employer
&apos;F_Employment_Income
&apos;Case : Self
&apos;*************************************
sub fPinOfEmployer_Listener_modified(oEv)
	if (notCallListener) then  
		exit Sub  
	end if &apos; Added By KANDARP 
	thisComponent.CurrentController.Frame.ContainerWindow.Enable= False
	call removeKRAListners(fPinOfEmployer_Listener,fPinOfEmployer)
	
	&apos;code
		
	oSheet = ThisComponent.CurrentController.getActiveSheet() 
	if  oSheet.name = &quot;Amendment&quot; then
		call addKRAListnersMultiCell(&quot;F_Employment_Income&quot;,&quot;EmpIncome.ListS&quot;,&quot;A&quot;,&quot;fPinOfEmployer_Listener_&quot;,fPinOfEmployer_Listener,fPinOfEmployer)
	    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
		Exit sub
	End If
	if(oSheet.name&lt;&gt;&quot;A_Basic_Info&quot;) then
	
		Dim startRowNum as Long , endRowNum as Long, startColumnNum as Long , endcolumnNum as Long
	    Dim sheet as Object
	    
	    sheet=ThisComponent.sheets.getByName(&quot;F_Employment_Income&quot;)
	    sheet.Unprotect(Pwd)
	    Dim dateFlag as Boolean
	    Dim msgStr As string
	
	  	oRange = ThisComponent.NamedRanges.getByName(&quot;EmpIncome.ListS&quot;)
	    startRowNum = oRange.getReferredCells().getRangeAddress().StartRow
	    endRowNum = oRange.getReferredCells().getRangeAddress().EndRow
		oColRange = sheet.getCellrangeByName(&quot;A&quot;&amp;(startRowNum+1)&amp;&quot;:A&quot;&amp;(endRowNum+1))
		startRowNum = oColRange.getRangeAddress().StartRow
	    endRowNum = oColRange.getRangeAddress().EndRow
	
		unprotectsheet(&quot;F_Employment_Income&quot;)
		Dim PINNo As String 
		Dim taxPyrWifePINNo as String
		Dim declareWifeIncome as String
		sheet=ThisComponent.sheets.getByName(&quot;A_Basic_Info&quot;)
		taxPyrPINNo= sheet.getCellrangeByName(&quot;RetInf.PIN&quot;).string
		taxPyrWifePINNo=ThisComponent.sheets.getByName(&quot;A_Basic_Info&quot;).getCellrangeByName(&quot;RetInf.SpousePIN&quot;).string
		declareWifeIncome = ThisComponent.sheets.getByName(&quot;A_Basic_Info&quot;).getCellrangeByName(&quot;RetInf.DeclareWifeIncome&quot;).string
	&apos;***	
		currRange = ThisComponent.getCurrentSelection() 
		If Not IsNull(oColRange.queryintersection(currRange.rangeaddress)) and (currRange.supportsService(&quot;com.sun.star.sheet.SheetCell&quot;)) then
			PINNo=UCase(currRange.string)
			currRange.string=UCase(PINNo)
			row= currRange.getCellAddress().Row 
			If PINNo &lt;&gt; &quot;&quot; Then
			  currRange.string=Ucase(PINNo)
			    If (TestPIN(PINNo)) Then
			    	If 	taxPyrPINNo&lt;&gt;&quot;&quot; or taxPyrWifePINNo&lt;&gt;&quot;&quot; then
					    If (Ucase(PINNo) = Ucase(taxPyrPINNo)) Then
					          	msgStr=msgStr &amp; (row+1)
					            currRange.string=&quot;&quot;
					            MsgBox &quot;PIN entered should not be same as Taxpayer&apos;s PIN.&quot;
					    ElseIf UCase(taxPyrWifePINNo) = Ucase(PINNo) and declareWifeIncome&lt;&gt;&quot;No&quot; then
					    		msgStr=msgStr &amp; (row+1)
					            currRange.string=&quot;&quot;
					    		MsgBox msgPinDupWife
					    End If
					 End If
		  	    Else
	   	    		msgStr=msgStr &amp; (row+1)
	   	    		currRange.string=&quot;&quot;
					MsgBox &quot;Please enter PIN of Employer in proper format.&quot;
		  	    End If
		     End If
		     
		     &apos;Duplicate Pins not allowed
		     Dim PRNNo As String 
			 Dim testPRNNo As String

		     sheet=ThisComponent.sheets.getByName(&quot;F_Employment_Income&quot;)
		     for i=startRowNum to endRowNum
				
				 testPRNNo=sheet.getCellByPosition(0,i).string
			&apos;	 result = TestDate(dateVal)
			         if row=i then &apos;Skip
			         Else
				         If testPRNNo&lt;&gt;&quot;&quot; then
				            If UCase(testPRNNo) = Ucase(PINNo) then
				            	MsgBox &quot;You have already entered details of &apos;&quot; &amp; Ucase(PINNo) &amp; &quot;&apos; in Row &quot; &amp; (i+1)
				            	currRange.string=&quot;&quot;
				            	Exit for
				         	End If
					     End If    
					 End If    
			    Next
			
	     End If
	     &apos;call validateDropDownPins(&quot;CarBenefit.ListS&quot;,&quot;PINofEmployerS&quot;) - Reverse check
	   	protectsheet(&quot;F_Employment_Income&quot;) 
	end If
	
	&apos;code
	
	call addKRAListnersMultiCell(&quot;F_Employment_Income&quot;,&quot;EmpIncome.ListS&quot;,&quot;A&quot;,&quot;fPinOfEmployer_Listener_&quot;,fPinOfEmployer_Listener,fPinOfEmployer)
    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
end sub
	
&apos;*************************************
&apos;Add Row Functionality
&apos;F_Employment_Income
&apos;Case : Wife
&apos;*************************************
Sub addRow_F_Employement_IncomeListWife()
	notCallListener = true
    Call InsertRowsAndFillFormulas(&quot;EmpIncome.ListW&quot;)
    &apos;Add All Remove Listeners
    call removeKRAListners(fPinOfEmployerW_Listener,fPinOfEmployerW)
    &apos;Add All Add Listeners
	call addKRAListnersMultiCell(&quot;F_Employment_Income&quot;,&quot;EmpIncome.ListW&quot;,&quot;A&quot;,&quot;fPinOfEmployerW_Listener_&quot;,fPinOfEmployerW_Listener,fPinOfEmployerW)	
	call resetSpecificRangeWithList(&quot;F_Employment_Income&quot;,&quot;PINofEmployerW&quot;,&quot;EmpIncome.ListW&quot;)
	call resetSpecificRangeWithList(&quot;F_Employment_Income&quot;,&quot;NameofEmployerW&quot;,&quot;EmpIncome.ListW&quot;)	
	Call resetDataValidity(&quot;I_Computation_of_Car_Benefit&quot;,&quot;CarBenefit.ListW&quot;,&quot;A&quot;,&quot;PINofEmployerW&quot;)
	Call resetDataValidity(&quot;M_Details_of_PAYE_Deducted&quot;,&quot;PayeDed.ListW&quot;,&quot;A&quot;,&quot;PINofEmployerW&quot;)
    notCallListener = false
End Sub

&apos;*************************************
&apos;Check on Pin Of Employer
&apos;F_Employment_Income
&apos;Case : Wife
&apos;*************************************
sub fPinOfEmployerW_Listener_modified(oEv)
	if (notCallListener) then  
		exit Sub  
	end if &apos; Added By KANDARP 
	thisComponent.CurrentController.Frame.ContainerWindow.Enable= False
	call removeKRAListners(fPinOfEmployerW_Listener,fPinOfEmployerW)
	
	&apos;code
		
	oSheet = ThisComponent.CurrentController.getActiveSheet() 
	if  oSheet.name = &quot;Amendment&quot; then
		call addKRAListnersMultiCell(&quot;F_Employment_Income&quot;,&quot;EmpIncome.ListW&quot;,&quot;A&quot;,&quot;fPinOfEmployerW_Listener_&quot;,fPinOfEmployerW_Listener,fPinOfEmployerW)
	    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
		Exit sub
	End If
	if(oSheet.name&lt;&gt;&quot;A_Basic_Info&quot;) then
	
		Dim startRowNum as Long , endRowNum as Long, startColumnNum as Long , endcolumnNum as Long
	    Dim sheet as Object
	    
	    sheet=ThisComponent.sheets.getByName(&quot;F_Employment_Income&quot;)
	    sheet.Unprotect(Pwd)
	    Dim dateFlag as Boolean
	    Dim msgStr As string
	
	  	oRange = ThisComponent.NamedRanges.getByName(&quot;EmpIncome.ListW&quot;)
	    startRowNum = oRange.getReferredCells().getRangeAddress().StartRow
	    endRowNum = oRange.getReferredCells().getRangeAddress().EndRow
		oColRange = sheet.getCellrangeByName(&quot;A&quot;&amp;(startRowNum+1)&amp;&quot;:A&quot;&amp;(endRowNum+1))
		startRowNum = oColRange.getRangeAddress().StartRow
	    endRowNum = oColRange.getRangeAddress().EndRow
	
		unprotectsheet(&quot;F_Employment_Income&quot;)
		Dim PINNo As String
		Dim taxPyrWifePINNo as String
		Dim declareWifeIncome as String 
		sheet=ThisComponent.sheets.getByName(&quot;A_Basic_Info&quot;)
		taxPyrPINNo= sheet.getCellrangeByName(&quot;RetInf.PIN&quot;).string
		taxPyrWifePINNo=ThisComponent.sheets.getByName(&quot;A_Basic_Info&quot;).getCellrangeByName(&quot;RetInf.SpousePIN&quot;).string
		declareWifeIncome = ThisComponent.sheets.getByName(&quot;A_Basic_Info&quot;).getCellrangeByName(&quot;RetInf.DeclareWifeIncome&quot;).string
	&apos;***	
		currRange = ThisComponent.getCurrentSelection() 
		If Not IsNull(oColRange.queryintersection(currRange.rangeaddress)) and (currRange.supportsService(&quot;com.sun.star.sheet.SheetCell&quot;)) then
			PINNo=UCase(currRange.string)
			currRange.string=UCase(PINNo)
			row= currRange.getCellAddress().Row 
			If PINNo &lt;&gt; &quot;&quot; Then
			  currRange.string=Ucase(PINNo)
			    If (TestPIN(PINNo)) Then
			    	If 	taxPyrPINNo&lt;&gt;&quot;&quot; or taxPyrWifePINNo&lt;&gt;&quot;&quot; then
					    If (Ucase(PINNo) = Ucase(taxPyrPINNo)) Then
					          	msgStr=msgStr &amp; (row+1)
					            currRange.string=&quot;&quot;
					            MsgBox &quot;PIN entered should not be same as Taxpayer&apos;s PIN.&quot;
					    ElseIf UCase(taxPyrWifePINNo) = Ucase(PINNo) and declareWifeIncome&lt;&gt;&quot;No&quot; then
					    		msgStr=msgStr &amp; (row+1)
					            currRange.string=&quot;&quot;
					    		MsgBox msgPinDupWife
					    End If
					 End If
		  	    Else
	   	    		msgStr=msgStr &amp; (row+1)
	   	    		currRange.string=&quot;&quot;
					MsgBox &quot;Please enter PIN of Employer in proper format.&quot;
		  	    End If
		     End If
		     
		     &apos;Duplicate Pins not allowed
		     sheet=ThisComponent.sheets.getByName(&quot;F_Employment_Income&quot;)
		     for i=startRowNum to endRowNum
				
				 testPRNNo=sheet.getCellByPosition(0,i).string
			&apos;	 result = TestDate(dateVal)
			         if row=i then &apos;Skip
			         Else
				         If testPRNNo&lt;&gt;&quot;&quot; then
				            If UCase(testPRNNo) = Ucase(PINNo) then
				            	MsgBox &quot;You have already entered details of &apos;&quot; &amp; Ucase(PINNo) &amp; &quot;&apos; in Row &quot; &amp; (i+1)
				            	currRange.string=&quot;&quot;
				            	Exit for
				         	End If
					     End If    
					 End If    
			    Next
		     
	     End If   	
	   	protectsheet(&quot;F_Employment_Income&quot;) 
	end If
	&apos;call validateDropDownPins(&quot;CarBenefit.ListW&quot;,&quot;PINofEmployerW&quot;)
	&apos;code
	
	call addKRAListnersMultiCell(&quot;F_Employment_Income&quot;,&quot;EmpIncome.ListW&quot;,&quot;A&quot;,&quot;fPinOfEmployerW_Listener_&quot;,fPinOfEmployerW_Listener,fPinOfEmployerW)
    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
end sub
	
sub validateDropDownPins(ByVal ListRangeName As String,ByVal PinRangeName As String)
Dim sheet as Object
Dim sheet1 as Object
Dim startRowNum as Long , endRowNum as Long, startColumnNum as Long , endcolumnNum as Long
Dim startRowNum1 as Long , endRowNum1 as Long, startColumnNum1 as Long , endcolumnNum1 as Long
Dim matchFound as Boolean

sheet=ThisComponent.sheets.getByName(&quot;F_Employment_Income&quot;)
sheet1=ThisComponent.sheets.getByName(&quot;I_Computation_of_Car_Benefit&quot;)

		oRange = ThisComponent.NamedRanges.getByName(ListRangeName)
	    startRowNum = oRange.getReferredCells().getRangeAddress().StartRow
	    endRowNum = oRange.getReferredCells().getRangeAddress().EndRow
		oColRange = sheet.getCellrangeByName(&quot;A&quot;&amp;(startRowNum+1)&amp;&quot;:A&quot;&amp;(endRowNum+1))
		startRowNum = oColRange.getRangeAddress().StartRow
	    endRowNum = oColRange.getRangeAddress().EndRow
	    
	for i=startRowNum to endRowNum
				
	 dropDownPin=sheet.getCellByPosition(0,i).string
     If dropDownPin&lt;&gt;&quot;&quot; then
        
        oRange1 = ThisComponent.NamedRanges.getByName(PinRangeName)
	    startRowNum1 = oRange.getReferredCells().getRangeAddress().StartRow
	    endRowNum1 = oRange.getReferredCells().getRangeAddress().EndRow
		oColRange1 = sheet.getCellrangeByName(&quot;A&quot;&amp;(startRowNum+1)&amp;&quot;:A&quot;&amp;(endRowNum+1))
		startRowNum1 = oColRange.getRangeAddress().StartRow
	    endRowNum1 = oColRange.getRangeAddress().EndRow
	    
	    matchFound=False
	    for j=startRowNum1 to endRowNum1
					
		 dropDownPin1=sheet1.getCellByPosition(0,j).string
	     If dropDownPin1&lt;&gt;&quot;&quot; then
	        If dropDownPin1=dropDownPin then
	        	matchFound=True
	        	Exit For
	        Else
	        	matchFound=False
	        End If
	        
	     End If    
	    Next
        
        If matchFound=False then
        	sheet1.getCellByPosition(0,i).string=&quot;&quot;
        End If
     End If    
    Next
    
end sub
</script:module>