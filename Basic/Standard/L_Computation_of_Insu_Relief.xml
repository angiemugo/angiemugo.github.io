<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="L_Computation_of_Insu_Relief" script:language="StarBasic">&apos;*************************************
&apos;Add Row Functionality
&apos;L_Computation_of_Insu_Relief
&apos;Case : Self
&apos;*************************************
Sub addRow_L_Computation_of_Insu_ReliefList()
	notCallListener = true
    Call InsertRowsAndFillFormulas(&quot;InsReliefDtls.ListS&quot;)
    &apos;Add All Remove Listeners
    call removeKRAListners(lPinOfInsuranceComp_Listener,lPinOfInsuranceComp)
    call removeKRAListners(lPurOfPolicy_Listener,lPurOfPolicy)
    call removeKRAListners(lInsuPolicyNum_Listener,lInsuPolicyNum)
    call removeKRAListners(lPolicyHolder_Listener,lPolicyHolder)
    call removeKRAListners(lCommencementDate_Listener,lCommencementDate)
    call removeKRAListners(lMaturityDate_Listener,lMaturityDate)
    &apos;Add All Add Listeners
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListS&quot;,&quot;A&quot;,&quot;lPinOfInsuranceComp_Listener_&quot;,lPinOfInsuranceComp_Listener,lPinOfInsuranceComp)
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListS&quot;,&quot;C&quot;,&quot;lPurOfPolicy_Listener_&quot;,lPurOfPolicy_Listener,lPurOfPolicy)
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListS&quot;,&quot;D&quot;,&quot;lInsuPolicyNum_Listener_&quot;,lInsuPolicyNum_Listener,lInsuPolicyNum)
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListS&quot;,&quot;E&quot;,&quot;lPolicyHolder_Listener_&quot;,lPolicyHolder_Listener,lPolicyHolder)
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListS&quot;,&quot;G&quot;,&quot;lCommencementDate_Listener_&quot;,lCommencementDate_Listener,lCommencementDate)
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListS&quot;,&quot;H&quot;,&quot;lMaturityDate_Listener_&quot;,lMaturityDate_Listener,lMaturityDate)
    notCallListener = false
End Sub

&apos;*************************************
&apos;Check on Pin Of Financial Institution
&apos;L_Computation_of_Insu_Relief
&apos;Case : Self
&apos;*************************************
sub lPinOfInsuranceComp_Listener_modified(oEv)
	if (notCallListener) then  
		exit Sub  
	end if &apos; Added By KANDARP 
	thisComponent.CurrentController.Frame.ContainerWindow.Enable= False
	call removeKRAListners(lPinOfInsuranceComp_Listener,lPinOfInsuranceComp)
	
	&apos;code
		
	oSheet = ThisComponent.CurrentController.getActiveSheet() 
	if  oSheet.name = &quot;Amendment&quot; then
		call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListS&quot;,&quot;A&quot;,&quot;lPinOfInsuranceComp_Listener_&quot;,lPinOfInsuranceComp_Listener,lPinOfInsuranceComp)
	    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
		Exit sub
	End If
	if(oSheet.name&lt;&gt;&quot;A_Basic_Info&quot;) then
	
		Dim startRowNum as Long , endRowNum as Long, startColumnNum as Long , endcolumnNum as Long
	    Dim sheet as Object
	    
	    sheet=ThisComponent.sheets.getByName(&quot;L_Computation_of_Insu_Relief&quot;)
	    Dim dateFlag as Boolean
	    Dim msgStr As string
		
	  	oRange = ThisComponent.NamedRanges.getByName(&quot;InsReliefDtls.ListS&quot;)
	    startRowNum = oRange.getReferredCells().getRangeAddress().StartRow
	    endRowNum = oRange.getReferredCells().getRangeAddress().EndRow
		oColRange = sheet.getCellrangeByName(&quot;A&quot;&amp;(startRowNum+1)&amp;&quot;:A&quot;&amp;(endRowNum+1))
		startRowNum = oColRange.getRangeAddress().StartRow
	    endRowNum = oColRange.getRangeAddress().EndRow
	
		unprotectsheet(&quot;L_Computation_of_Insu_Relief&quot;)
		Dim PINNo As String 
		Dim row As Long
		Dim insurancePolicyNum As String 
		Dim testInsurancePolicyNum as String
		Dim purposeOfPolicyCode as String
		Dim testPurposeOfPolicyCode as String
		Dim pinOfInsurance as String
		Dim testPinOfInsurance as String
		Dim taxPyrWifePINNo as String
		Dim declareWifeIncome as String
		
		sheet=ThisComponent.sheets.getByName(&quot;A_Basic_Info&quot;)
		taxPyrPINNo= sheet.getCellrangeByName(&quot;RetInf.PIN&quot;).string
		taxPyrWifePINNo=ThisComponent.sheets.getByName(&quot;A_Basic_Info&quot;).getCellrangeByName(&quot;RetInf.SpousePIN&quot;).string
		declareWifeIncome = ThisComponent.sheets.getByName(&quot;A_Basic_Info&quot;).getCellrangeByName(&quot;RetInf.DeclareWifeIncome&quot;).string
	&apos;***	
		currRange = ThisComponent.getCurrentSelection() 
		If Not IsNull(oColRange.queryintersection(currRange.rangeaddress)) and (currRange.supportsService(&quot;com.sun.star.sheet.SheetCell&quot;)) then
			row= currRange.getCellAddress().Row 
			PINNo=UCase(currRange.string)
			currRange.string=UCase(PINNo)
			
			If PINNo &lt;&gt; &quot;&quot; Then
			  currRange.string=Ucase(PINNo)
			    If (TestNonIndiPIN(PINNo)) Then
			    	If 	taxPyrPINNo&lt;&gt;&quot;&quot; or taxPyrWifePINNo&lt;&gt;&quot;&quot; then
					    If (Ucase(PINNo) = Ucase(taxPyrPINNo)) Then
					          	msgStr=msgStr &amp; (row+1)
					            currRange.string=&quot;&quot;
					            MsgBox &quot;PIN entered should not be same as Taxpayer&apos;s PIN.&quot;
					    ElseIf UCase(taxPyrWifePINNo) = Ucase(PINNo) and declareWifeIncome&lt;&gt;&quot;No&quot; then
					    		msgStr=msgStr &amp; (row+1)
					            currRange.string=&quot;&quot;
					    		MsgBox msgPinDupWife
					    End If
					 End If
		  	    Else
	   	    		msgStr=msgStr &amp; (row+1)
	   	    		currRange.string=&quot;&quot;
					MsgBox &quot;Please enter Non Individual Pin of Insurance Company in proper format.&quot;
		  	    End If
		     End If
		    
		    sheet=ThisComponent.sheets.getByName(&quot;L_Computation_of_Insu_Relief&quot;)
			insurancePolicyNum=sheet.getCellrangeByName(&quot;D&quot;&amp;(row+1)&amp;&quot;:D&quot;&amp;(row+1)).string
			purposeOfPolicyCode=sheet.getCellrangeByName(&quot;L&quot;&amp;(row+1)&amp;&quot;:L&quot;&amp;(row+1)).string
			pinOfInsurance=sheet.getCellrangeByName(&quot;A&quot;&amp;(row+1)&amp;&quot;:A&quot;&amp;(row+1)).string
			&apos;------------
			if insurancePolicyNum&lt;&gt;&quot;&quot; then	
			
				for i=startRowNum to endRowNum
				 testPinOfInsurance=sheet.getCellByPosition(0,i).string
				 testInsurancePolicyNum=sheet.getCellByPosition(3,i).string
				 testPurposeOfPolicyCode=sheet.getCellByPosition(11,i).string
			&apos;	 result = TestDate(dateVal)
			         if row=i then &apos;Skip
			         Else
				         If testInsurancePolicyNum&lt;&gt;&quot;&quot; and testPurposeOfPolicyCode&lt;&gt;&quot;&quot; and testPinOfInsurance&lt;&gt;&quot;&quot; then
				            If (UCase(testInsurancePolicyNum) = Ucase(insurancePolicyNum)) and (UCase(testPurposeOfPolicyCode) = Ucase(purposeOfPolicyCode)) and (UCase(testPinOfInsurance) = Ucase(pinOfInsurance)) then
				            	MsgBox &quot;The Insurance Policy Number against the same PIN of Insurance Company and Purpose of Policy cannot be same as in Row &quot; &amp; (i+1)
				            	currRange.string=&quot;&quot;
				            	Exit for
				         	End If
					     End If    
					 End If    
			    Next
	
		    
		    
		    &apos;---Wife Section PRN Comparision
		    	oRange = ThisComponent.NamedRanges.getByName(&quot;InsReliefDtls.ListW&quot;)
			    startRowNum = oRange.getReferredCells().getRangeAddress().StartRow
			    endRowNum = oRange.getReferredCells().getRangeAddress().EndRow
				oColRange = sheet.getCellrangeByName(&quot;D&quot;&amp;(startRowNum+1)&amp;&quot;:D&quot;&amp;(endRowNum+1))
				startRowNum = oColRange.getRangeAddress().StartRow
			    endRowNum = oColRange.getRangeAddress().EndRow
			    
			    for i=startRowNum to endRowNum
				 testPinOfInsurance=sheet.getCellByPosition(0,i).string
				 testInsurancePolicyNum=sheet.getCellByPosition(3,i).string
				 testPurposeOfPolicyCode=sheet.getCellByPosition(11,i).string
			&apos;	 result = TestDate(dateVal)
			         if row=i then &apos;Skip
			         Else
				         If testInsurancePolicyNum&lt;&gt;&quot;&quot; and testPurposeOfPolicyCode&lt;&gt;&quot;&quot; and testPinOfInsurance&lt;&gt;&quot;&quot; then
				            If (UCase(testInsurancePolicyNum) = Ucase(insurancePolicyNum)) and (UCase(testPurposeOfPolicyCode) = Ucase(purposeOfPolicyCode)) and (UCase(testPinOfInsurance) = Ucase(pinOfInsurance))  then
				            	MsgBox &quot;The Insurance Policy Number against the same PIN of Insurance Company and Purpose of Policy cannot be same as in Row &quot; &amp; (i+1)
				            	currRange.string=&quot;&quot;
				            	Exit for
				         	End If
					     End If    
					 End If    
			    Next
			    
		    &apos;---Wife Section PRN Comparision
	     	End If
	     
	     End If   	
	   	protectsheet(&quot;L_Computation_of_Insu_Relief&quot;) 
	end If
	
	&apos;code
	
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListS&quot;,&quot;A&quot;,&quot;lPinOfInsuranceComp_Listener_&quot;,lPinOfInsuranceComp_Listener,lPinOfInsuranceComp)
    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
end sub

&apos;*************************************
&apos;Check on Purpose Of Policy
&apos;L_Computation_of_Insu_Relief
&apos;Case : Self
&apos;*************************************
sub lPurOfPolicy_Listener_modified(oEv)
	if (notCallListener) then  
		exit Sub  
	end if &apos; Added By KANDARP 
	thisComponent.CurrentController.Frame.ContainerWindow.Enable= False
	call removeKRAListners(lPurOfPolicy_Listener,lPurOfPolicy)
	call removeKRAListners(lCommencementDate_Listener,lCommencementDate)
    call removeKRAListners(lMaturityDate_Listener,lMaturityDate)
	&apos;code
		
	oSheet = ThisComponent.CurrentController.getActiveSheet() 
	if  oSheet.name = &quot;Amendment&quot; then
		call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListS&quot;,&quot;C&quot;,&quot;lPurOfPolicy_Listener_&quot;,lPurOfPolicy_Listener,lPurOfPolicy)
	    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
		Exit sub
	End If
	if(oSheet.name&lt;&gt;&quot;A_Basic_Info&quot;) then
	
		Dim startRowNum as Long , endRowNum as Long, startColumnNum as Long , endcolumnNum as Long
	    Dim sheet as Object
	    
	    sheet=ThisComponent.sheets.getByName(&quot;L_Computation_of_Insu_Relief&quot;)
	    Dim dateFlag as Boolean
	    Dim msgStr As string
	
	  	oRange = ThisComponent.NamedRanges.getByName(&quot;InsReliefDtls.ListS&quot;)
	    startRowNum = oRange.getReferredCells().getRangeAddress().StartRow
	    endRowNum = oRange.getReferredCells().getRangeAddress().EndRow
		oColRange = sheet.getCellrangeByName(&quot;C&quot;&amp;(startRowNum+1)&amp;&quot;:C&quot;&amp;(endRowNum+1))
		startRowNum = oColRange.getRangeAddress().StartRow
	    endRowNum = oColRange.getRangeAddress().EndRow
	
		unprotectsheet(&quot;L_Computation_of_Insu_Relief&quot;)
		Dim row As Long
		Dim insurancePolicyNum As String 
		Dim testInsurancePolicyNum as String
		Dim purposeOfPolicyCode as String
		Dim testPurposeOfPolicyCode as String
		Dim pinOfInsurance as String
		Dim testPinOfInsurance as String
		
		
		Dim currRange1 as Object
		Dim currRange2 as Object
		Dim currRange as Object
		Dim purpOfPol As String 
		Dim commDate As String
		Dim matDate as String
	&apos;***	
		currRange = ThisComponent.getCurrentSelection() 
		If Not IsNull(oColRange.queryintersection(currRange.rangeaddress)) and (currRange.supportsService(&quot;com.sun.star.sheet.SheetCell&quot;)) then
			row= currRange.getCellAddress().Row 
			
			currRow= row + 1 
			currRange1 = sheet.getCellrangeByName(&quot;G&quot; &amp; (currRow) &amp; &quot;:G&quot; &amp; (currRow))
			currRange2 = sheet.getCellrangeByName(&quot;H&quot; &amp; (currRow) &amp; &quot;:H&quot; &amp; (currRow))	
			purpOfPol = currRange.string
			commDate= currRange1.string
			
			if commDate&lt;&gt;&quot;&quot; and purpOfPol&lt;&gt;&quot;&quot; then
				If purpOfPol=&quot;Health&quot; then
					if checkGrtrThnEqualToDate(commDate,&quot;01/01/2007&quot;) = True then
						MsgBox &quot;Commencement Date should be on or after 1st Jan 2007 for Health&quot;
						currRange1.string=&quot;&quot;
						currRange2.string=&quot;&quot;						
					End If
				ElseIf purpOfPol=&quot;Education&quot; and purpOfPol=&quot;Life&quot; then
					if checkGrtrThnEqualToDate(commDate,&quot;01/06/2003&quot;) = True then
						MsgBox &quot;Commencement Date should be on or after 1st June 2003 for Life and Education&quot;
						currRange1.string=&quot;&quot;
						currRange2.string=&quot;&quot;						
					End If 
				End If	
				If currRange1.string &lt;&gt; &quot;&quot; And currRange2.string &lt;&gt; &quot;&quot; and purpOfPol=&quot;Education&quot; Then
                		    possibleDate = specificDateBeforeYears(currRange2.string,10)
        		            If (checkGrtrThnDate(possibleDate,currRange1.string)) = True Then
		                         &apos;MsgBox (&quot;Maturity date should be 10 years greater than date of commencement&quot;)
		                         MsgBox (&quot;The difference between Maturity Date and Commencement Date must be equal to or greater than 10 years.&quot;)
                    		     currRange1.string=&quot;&quot;
								 currRange2.string=&quot;&quot;
            		        End If
		        End If		
		   End If
			
			insurancePolicyNum=sheet.getCellrangeByName(&quot;D&quot;&amp;(row+1)&amp;&quot;:D&quot;&amp;(row+1)).string
			purposeOfPolicyCode=sheet.getCellrangeByName(&quot;L&quot;&amp;(row+1)&amp;&quot;:L&quot;&amp;(row+1)).string
			pinOfInsurance=sheet.getCellrangeByName(&quot;A&quot;&amp;(row+1)&amp;&quot;:A&quot;&amp;(row+1)).string
			&apos;------------
			if insurancePolicyNum&lt;&gt;&quot;&quot; then	
			
				for i=startRowNum to endRowNum
				 testPinOfInsurance=sheet.getCellByPosition(0,i).string
				 testInsurancePolicyNum=sheet.getCellByPosition(3,i).string
				 testPurposeOfPolicyCode=sheet.getCellByPosition(11,i).string
			&apos;	 result = TestDate(dateVal)
			         if row=i then &apos;Skip
			         Else
				         If testInsurancePolicyNum&lt;&gt;&quot;&quot; and testPurposeOfPolicyCode&lt;&gt;&quot;&quot; and testPinOfInsurance&lt;&gt;&quot;&quot; then
				            If (UCase(testInsurancePolicyNum) = Ucase(insurancePolicyNum)) and (UCase(testPurposeOfPolicyCode) = Ucase(purposeOfPolicyCode)) and (UCase(testPinOfInsurance) = Ucase(pinOfInsurance)) then
				            	MsgBox &quot;The Insurance Policy Number against the same PIN of Insurance Company and Purpose of Policy cannot be same as in Row &quot; &amp; (i+1)
				            	currRange.string=&quot;&quot;
				            	Exit for
				         	End If
					     End If    
					 End If    
			    Next
	
		    
		    
		    &apos;---Wife Section PRN Comparision
		    	oRange = ThisComponent.NamedRanges.getByName(&quot;InsReliefDtls.ListW&quot;)
			    startRowNum = oRange.getReferredCells().getRangeAddress().StartRow
			    endRowNum = oRange.getReferredCells().getRangeAddress().EndRow
				oColRange = sheet.getCellrangeByName(&quot;D&quot;&amp;(startRowNum+1)&amp;&quot;:D&quot;&amp;(endRowNum+1))
				startRowNum = oColRange.getRangeAddress().StartRow
			    endRowNum = oColRange.getRangeAddress().EndRow
			    
			    for i=startRowNum to endRowNum
				 testPinOfInsurance=sheet.getCellByPosition(0,i).string
				 testInsurancePolicyNum=sheet.getCellByPosition(3,i).string
				 testPurposeOfPolicyCode=sheet.getCellByPosition(11,i).string
			&apos;	 result = TestDate(dateVal)
			         if row=i then &apos;Skip
			         Else
				         If testInsurancePolicyNum&lt;&gt;&quot;&quot; and testPurposeOfPolicyCode&lt;&gt;&quot;&quot; and testPinOfInsurance&lt;&gt;&quot;&quot; then
				            If (UCase(testInsurancePolicyNum) = Ucase(insurancePolicyNum)) and (UCase(testPurposeOfPolicyCode) = Ucase(purposeOfPolicyCode)) and (UCase(testPinOfInsurance) = Ucase(pinOfInsurance))  then
				            	MsgBox &quot;The Insurance Policy Number against the same PIN of Insurance Company and Purpose of Policy cannot be same as in Row &quot; &amp; (i+1)
				            	currRange.string=&quot;&quot;
				            	Exit for
				         	End If
					     End If    
					 End If    
			    Next
			    
		    &apos;---Wife Section PRN Comparision
	     End If   
	     &apos;-------
	     End If   	
	   	protectsheet(&quot;L_Computation_of_Insu_Relief&quot;) 
	end If
	
	&apos;code
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListS&quot;,&quot;G&quot;,&quot;lCommencementDate_Listener_&quot;,lCommencementDate_Listener,lCommencementDate)
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListS&quot;,&quot;H&quot;,&quot;lMaturityDate_Listener_&quot;,lMaturityDate_Listener,lMaturityDate)
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListS&quot;,&quot;C&quot;,&quot;lPurOfPolicy_Listener_&quot;,lPurOfPolicy_Listener,lPurOfPolicy)
    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
end sub

&apos;*************************************
&apos;Check on insurance Policy Number
&apos;L_Computation_of_Insu_Relief
&apos;Case : Self
&apos;*************************************
sub lInsuPolicyNum_Listener_modified(oEv)
	if (notCallListener) then  
		exit Sub  
	end if &apos; Added By KANDARP 
	thisComponent.CurrentController.Frame.ContainerWindow.Enable= False
	call removeKRAListners(lInsuPolicyNum_Listener,lInsuPolicyNum)
	
	&apos;code
		
	oSheet = ThisComponent.CurrentController.getActiveSheet() 
	if  oSheet.name = &quot;Amendment&quot; then
		call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListS&quot;,&quot;D&quot;,&quot;lInsuPolicyNum_Listener_&quot;,lInsuPolicyNum_Listener,lInsuPolicyNum)
	    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
		Exit sub
	End If
	if(oSheet.name&lt;&gt;&quot;A_Basic_Info&quot;) then
	
		Dim startRowNum as Long , endRowNum as Long, startColumnNum as Long , endcolumnNum as Long
	    Dim sheet as Object
	    
	    sheet=ThisComponent.sheets.getByName(&quot;L_Computation_of_Insu_Relief&quot;)
	    Dim dateFlag as Boolean
	    Dim msgStr As string
	
	  	oRange = ThisComponent.NamedRanges.getByName(&quot;InsReliefDtls.ListS&quot;)
	    startRowNum = oRange.getReferredCells().getRangeAddress().StartRow
	    endRowNum = oRange.getReferredCells().getRangeAddress().EndRow
		oColRange = sheet.getCellrangeByName(&quot;D&quot;&amp;(startRowNum+1)&amp;&quot;:D&quot;&amp;(endRowNum+1))
		startRowNum = oColRange.getRangeAddress().StartRow
	    endRowNum = oColRange.getRangeAddress().EndRow
	
		unprotectsheet(&quot;L_Computation_of_Insu_Relief&quot;)
		Dim row As Long
		Dim insurancePolicyNum As String 
		Dim testInsurancePolicyNum as String
		Dim purposeOfPolicyCode as String
		Dim testPurposeOfPolicyCode as String
		Dim pinOfInsurance as String
		Dim testPinOfInsurance as String

	&apos;***	
		currRange = ThisComponent.getCurrentSelection() 
		If Not IsNull(oColRange.queryintersection(currRange.rangeaddress)) and (currRange.supportsService(&quot;com.sun.star.sheet.SheetCell&quot;)) then
			row= currRange.getCellAddress().Row 
			insurancePolicyNum=currRange.string
			currRange.string=UCase(insurancePolicyNum)
			purposeOfPolicyCode=sheet.getCellrangeByName(&quot;L&quot;&amp;(row+1)&amp;&quot;:L&quot;&amp;(row+1)).string
			pinOfInsurance=sheet.getCellrangeByName(&quot;A&quot;&amp;(row+1)&amp;&quot;:A&quot;&amp;(row+1)).string
			&apos;------------
			if insurancePolicyNum&lt;&gt;&quot;&quot; then	
			
				for i=startRowNum to endRowNum
				 testPinOfInsurance=sheet.getCellByPosition(0,i).string
				 testInsurancePolicyNum=sheet.getCellByPosition(3,i).string
				 testPurposeOfPolicyCode=sheet.getCellByPosition(11,i).string
			&apos;	 result = TestDate(dateVal)
			         if row=i then &apos;Skip
			         Else
				         If testInsurancePolicyNum&lt;&gt;&quot;&quot; and testPurposeOfPolicyCode&lt;&gt;&quot;&quot; and testPinOfInsurance&lt;&gt;&quot;&quot; then
				            If (UCase(testInsurancePolicyNum) = Ucase(insurancePolicyNum)) and (UCase(testPurposeOfPolicyCode) = Ucase(purposeOfPolicyCode)) and (UCase(testPinOfInsurance) = Ucase(pinOfInsurance)) then
				            	MsgBox &quot;The Insurance Policy Number against the same PIN of Insurance Company and Purpose of Policy cannot be same as in Row &quot; &amp; (i+1)
				            	currRange.string=&quot;&quot;
				            	Exit for
				         	End If
					     End If    
					 End If    
			    Next
	
		    
		    
		    &apos;---Wife Section PRN Comparision
		    	oRange = ThisComponent.NamedRanges.getByName(&quot;InsReliefDtls.ListW&quot;)
			    startRowNum = oRange.getReferredCells().getRangeAddress().StartRow
			    endRowNum = oRange.getReferredCells().getRangeAddress().EndRow
				oColRange = sheet.getCellrangeByName(&quot;D&quot;&amp;(startRowNum+1)&amp;&quot;:D&quot;&amp;(endRowNum+1))
				startRowNum = oColRange.getRangeAddress().StartRow
			    endRowNum = oColRange.getRangeAddress().EndRow
			    
			    for i=startRowNum to endRowNum
				 testPinOfInsurance=sheet.getCellByPosition(0,i).string
				 testInsurancePolicyNum=sheet.getCellByPosition(3,i).string
				 testPurposeOfPolicyCode=sheet.getCellByPosition(11,i).string
			&apos;	 result = TestDate(dateVal)
			         if row=i then &apos;Skip
			         Else
				         If testInsurancePolicyNum&lt;&gt;&quot;&quot; and testPurposeOfPolicyCode&lt;&gt;&quot;&quot; and testPinOfInsurance&lt;&gt;&quot;&quot; then
				            If (UCase(testInsurancePolicyNum) = Ucase(insurancePolicyNum)) and (UCase(testPurposeOfPolicyCode) = Ucase(purposeOfPolicyCode)) and (UCase(testPinOfInsurance) = Ucase(pinOfInsurance))  then
				            	MsgBox &quot;The Insurance Policy Number against the same PIN of Insurance Company and Purpose of Policy cannot be same as in Row &quot; &amp; (i+1)
				            	currRange.string=&quot;&quot;
				            	Exit for
				         	End If
					     End If    
					 End If    
			    Next
			    
		    &apos;---Wife Section PRN Comparision
	     End If   
	     &apos;-------
	     End If   	
	   	protectsheet(&quot;L_Computation_of_Insu_Relief&quot;) 
	end If
	
	&apos;code
	
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListS&quot;,&quot;D&quot;,&quot;lInsuPolicyNum_Listener_&quot;,lInsuPolicyNum_Listener,lInsuPolicyNum)
    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
end sub

&apos;*************************************
&apos;Check on Policy Holder
&apos;L_Computation_of_Insu_Relief
&apos;Case : Self
&apos;*************************************
sub lPolicyHolder_Listener_modified(oEv)
	if (notCallListener) then  
		exit Sub  
	end if &apos; Added By KANDARP 
	thisComponent.CurrentController.Frame.ContainerWindow.Enable= False
	call removeKRAListners(lPolicyHolder_Listener,lPolicyHolder)
	
	&apos;code
		
	oSheet = ThisComponent.CurrentController.getActiveSheet() 
	&apos;*******************************
	&apos;Code Added to restrict Listeners to be called while Amendment
	if  oSheet.name = &quot;Amendment&quot; then
		call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListS&quot;,&quot;E&quot;,&quot;lPolicyHolder_Listener_&quot;,lPolicyHolder_Listener,lPolicyHolder)
	    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
		Exit sub
	End If
	&apos;*******************************
	
	if(oSheet.name&lt;&gt;&quot;A_Basic_Info&quot;) then
		Dim startRowNum as Long , endRowNum as Long, startColumnNum as Long , endcolumnNum as Long
	    oRange = ThisComponent.NamedRanges.getByName(&quot;InsReliefDtls.ListS&quot;)
	    startRowNum = oRange.getReferredCells().getRangeAddress().StartRow
	    endRowNum = oRange.getReferredCells().getRangeAddress().EndRow
		sheet=ThisComponent.sheets.getByName(&quot;L_Computation_of_Insu_Relief&quot;)
		oColRange = sheet.getCellrangeByName(&quot;E&quot;&amp;(startRowNum+1)&amp;&quot;:E&quot;&amp;(endRowNum+1))
		Unprotectsheet(&quot;L_Computation_of_Insu_Relief&quot;)
		Dim usage as String
		Dim msgStr As String
		Dim currRange as Object
		Dim row As Long
	&apos;***
		currRange = ThisComponent.getCurrentSelection() 
		If Not IsNull(oColRange.queryintersection(currRange.rangeaddress)) and (currRange.supportsService(&quot;com.sun.star.sheet.SheetCell&quot;)) then
			usage= currRange.string
			row= currRange.getCellAddress().Row 
	
				If (usage=&quot;Child&quot;) Then
					Unprotect_Range(&quot;L_Computation_of_Insu_Relief&quot;,&quot;F&quot;&amp;(row+1)&amp;&quot;:F&quot;&amp;(row+1))
				else    
					sheet.getCellrangeByName(&quot;H&quot;&amp;(row+1)&amp;&quot;:H&quot;&amp;(row+1)).string=&quot;&quot;
					Protect_Range(&quot;L_Computation_of_Insu_Relief&quot;,&quot;F&quot;&amp;(row+1)&amp;&quot;:F&quot;&amp;(row+1)) 
				End If
		End If
		
	&apos;***	
	  	protectsheet(&quot;L_Computation_of_Insu_Relief&quot;)
	End If
	
	&apos;code
	
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListS&quot;,&quot;E&quot;,&quot;lPolicyHolder_Listener_&quot;,lPolicyHolder_Listener,lPolicyHolder)
    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
end sub

&apos;*************************************
&apos;Check on Commencement Date
&apos;L_Computation_of_Insu_Relief
&apos;Case : Self
&apos;*************************************
sub lCommencementDate_Listener_modified(oEv)
	if (notCallListener) then  
		exit Sub  
	end if &apos; Added By KANDARP 
	thisComponent.CurrentController.Frame.ContainerWindow.Enable= False
	call removeKRAListners(lCommencementDate_Listener,lCommencementDate)
	
	&apos;code
		
	oSheet = ThisComponent.CurrentController.getActiveSheet() 
	&apos;*******************************
	&apos;Code Added to restrict Listeners to be called while Amendment
	if  oSheet.name = &quot;Amendment&quot; then
		call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListS&quot;,&quot;G&quot;,&quot;lCommencementDate_Listener_&quot;,lCommencementDate_Listener,lCommencementDate)
	    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
		Exit sub
	End If
	&apos;*******************************
	Dim sheet as Object
	sheet=ThisComponent.sheets.getByName(&quot;L_Computation_of_Insu_Relief&quot;)
	sheet.Unprotect(Pwd)
	Dim startRowNum as Long , endRowNum as Long, startColumnNum as Long , endcolumnNum as Long
    Dim shtName As String
    Dim msgStr As string

  	oRange = ThisComponent.NamedRanges.getByName(&quot;InsReliefDtls.ListS&quot;)
    startRowNum = oRange.getReferredCells().getRangeAddress().StartRow
    endRowNum = oRange.getReferredCells().getRangeAddress().EndRow
	oColRange = sheet.getCellrangeByName(&quot;G&quot;&amp;(startRowNum+1)&amp;&quot;:G&quot;&amp;(endRowNum+1))
	startRowNum = oColRange.getRangeAddress().StartRow
    endRowNum = oColRange.getRangeAddress().EndRow

	Dim commDate As String 
	Dim matDate As String
	Dim purpOfPol As String
	Dim currRange as Object
	Dim currRange1 as Object
	Dim currRange2 as Object
	Dim year as String
	Dim month as String
	Dim day as String
	Dim endDt as Object
	Dim startDate as String
	Dim endDate as String
	
	startDate =    ThisComponent.Sheets.getByName(&quot;A_Basic_Info&quot;).getCellrangeByName(&quot;RetInf.RetStartDate&quot;).string
	endDate = ThisComponent.Sheets.getByName(&quot;A_Basic_Info&quot;).getCellrangeByName(&quot;RetInf.RetEndDate&quot;).string
	
&apos;***	
	currRange = ThisComponent.getCurrentSelection() 
	If Not IsNull(oColRange.queryintersection(currRange.rangeaddress)) and (currRange.supportsService(&quot;com.sun.star.sheet.SheetCell&quot;)) then
		row= currRange.getCellAddress().Row 
		commDate= currRange.string
		if commDate&lt;&gt;&quot;&quot; then
			if validateDate(commDate)=false then
				currRange.string=&quot;&quot;
				Msgbox msgDateFrmt
				goto endFunction1
		  	End If
			If (startDate = &quot;&quot;) OR ValidateDate(startDate)=False Or (endDate = &quot;&quot;) Or ValidateDate(endDate)=False Then
			       	     currRange.string = &quot;&quot;
			       	     commDate=&quot;&quot;
	            		 MsgBox msgEntrPrdDate
	              		 ThisComponent.CurrentController.setActiveSheet(ThisComponent.Sheets.getByName(&quot;A_Basic_Info&quot;))
		            Else			
						endDt= Split(endDate,&quot;/&quot;)
	              		year=INT(endDt(2))
	              		month=INT(endDt(1))
	              		day=INT(endDt(0))
			            If lessThnEqualToReturnYr(commDate,year,month,day)=False Then
				        		   currRange.string = &quot;&quot;
				        		   commDate=&quot;&quot;
				        		   msgStr = msgStr &amp; (row+1)
				        		   MsgBox &quot;Commencement Date in Row &quot; &amp; (row+1) &amp; &quot; should be before or within Return Period.&quot;
				        End If
       				End If
			End If
			if commDate&lt;&gt;&quot;&quot; then
				if validateDate(commDate)=false then
					currRange.string=&quot;&quot;
					Msgbox msgDateFrmt
					goto endFunction1
				End If
				currRow= row+1
				currRange1 = sheet.getCellrangeByName(&quot;C&quot; &amp; (currRow) &amp; &quot;:C&quot; &amp; (currRow))
				currRange2 = sheet.getCellrangeByName(&quot;H&quot; &amp; (currRow) &amp; &quot;:H&quot; &amp; (currRow))	
				purpOfPol = currRange1.string
				matDate= currRange2.string
			
					If purpOfPol=&quot;&quot; then
				MsgBox &quot;Please first select purpose Of policy.&quot;
				currRange.string=&quot;&quot;
			ElseIf purpOfPol=&quot;Health&quot; then
					if checkGrtrThnEqualToDate(commDate,&quot;01/01/2007&quot;) = True then
						MsgBox &quot;Commencement Date should be on or after 1st Jan 2007 for Health&quot;
						currRange.string=&quot;&quot;
						currRange2.string=&quot;&quot;
						goto endFunction1						
					End If
			ElseIf purpOfPol=&quot;Education&quot; or purpOfPol=&quot;Life&quot; then
					if checkGrtrThnEqualToDate(commDate,&quot;01/06/2003&quot;) = True then
						MsgBox &quot;Commencement Date should be on or after 1st June 2003 for Life and Education&quot;
						currRange.string=&quot;&quot;
						currRange2.string=&quot;&quot;						
						goto endFunction1
					End If
			End If
			If commDate &lt;&gt; &quot;&quot; And matDate &lt;&gt; &quot;&quot; and purpOfPol=&quot;Education&quot; Then
                    possibleDate = specificDateBeforeYears(matDate,10)
                    If (checkGrtrThnDate(possibleDate,commDate)) = False Then
                         &apos;MsgBox (&quot;Maturity date should be 10 years greater than date of commencement&quot;)
                         MsgBox (&quot;The difference between Maturity Date and Commencement Date must be equal to or greater than 10 years.&quot;)
                         currRange.string=&quot;&quot;
                    End If
            End If		
            
            If matDate &lt;&gt; &quot;&quot; And currRange.string &lt;&gt; &quot;&quot; Then
                    If (checkGrtrThnDate(matDate,commDate)) = True Then
                         &apos;MsgBox (&quot;Maturity date should be greater than or equal to date of commencement&quot;)
                         MsgBox (&quot;Maturity date should be greater than Date of Commencement&quot;)
                         currRange.string=&quot;&quot;
                    End If
            End If					
			
	  	 End If
		End If   
	&apos;code
endFunction1:	
	sheet.protect(Pwd)
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListS&quot;,&quot;G&quot;,&quot;lCommencementDate_Listener_&quot;,lCommencementDate_Listener,lCommencementDate)
    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
end sub

&apos;*************************************
&apos;Check on Maturity Date
&apos;L_Computation_of_Insu_Relief
&apos;Case : Self
&apos;*************************************
sub lMaturityDate_Listener_modified(oEv)
	if (notCallListener) then  
		exit Sub  
	end if &apos; Added By KANDARP 
	thisComponent.CurrentController.Frame.ContainerWindow.Enable= False
	call removeKRAListners(lMaturityDate_Listener,lMaturityDate)
	
	&apos;code
		
	oSheet = ThisComponent.CurrentController.getActiveSheet() 
	&apos;*******************************
	&apos;Code Added to restrict Listeners to be called while Amendment
	if  oSheet.name = &quot;Amendment&quot; then
		call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListS&quot;,&quot;H&quot;,&quot;lMaturityDate_Listener_&quot;,lMaturityDate_Listener,lMaturityDate)
	    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
		Exit sub
	End If
	&apos;*******************************
	Dim sheet as Object
	sheet=ThisComponent.sheets.getByName(&quot;L_Computation_of_Insu_Relief&quot;)
	 sheet.Unprotect(Pwd)

	Dim startRowNum as Long , endRowNum as Long, startColumnNum as Long , endcolumnNum as Long
    
    Dim shtName As String
    
   
    Dim msgStr As string

  	oRange = ThisComponent.NamedRanges.getByName(&quot;InsReliefDtls.ListS&quot;)
    startRowNum = oRange.getReferredCells().getRangeAddress().StartRow
    endRowNum = oRange.getReferredCells().getRangeAddress().EndRow
	oColRange = sheet.getCellrangeByName(&quot;H&quot;&amp;(startRowNum+1)&amp;&quot;:H&quot;&amp;(endRowNum+1))
	startRowNum = oColRange.getRangeAddress().StartRow
    endRowNum = oColRange.getRangeAddress().EndRow

	Dim commDate As String 
	Dim matDate As String
	Dim purpOfPol As String
	Dim currRange as Object
	Dim currRange1 as Object
	Dim currRange2 as Object
	Dim startDate as String
	Dim endDate as String
	
	startDate =    ThisComponent.Sheets.getByName(&quot;A_Basic_Info&quot;).getCellrangeByName(&quot;RetInf.RetStartDate&quot;).string
	endDate = ThisComponent.Sheets.getByName(&quot;A_Basic_Info&quot;).getCellrangeByName(&quot;RetInf.RetEndDate&quot;).string
	
&apos;***	
	currRange = ThisComponent.getCurrentSelection() 
	If Not IsNull(oColRange.queryintersection(currRange.rangeaddress)) and (currRange.supportsService(&quot;com.sun.star.sheet.SheetCell&quot;)) then
		matDate= currRange.string
		if matDate&lt;&gt;&quot;&quot; then
			if validateDate(matDate)=false then
				currRange.string=&quot;&quot;
				Msgbox msgDateFrmt
				goto endFunction4
			End If
				row= currRange.getCellAddress().Row 
				currRow= row+1
				currRange1 = sheet.getCellrangeByName(&quot;C&quot; &amp; (currRow) &amp; &quot;:C&quot; &amp; (currRow))
				currRange2 = sheet.getCellrangeByName(&quot;G&quot; &amp; (currRow) &amp; &quot;:G&quot; &amp; (currRow))	
				purpOfPol = currRange1.string
				commDate= currRange2.string
				
			&apos;----
			If (startDate = &quot;&quot;) OR ValidateDate(startDate)=False Or (endDate = &quot;&quot;) Or ValidateDate(endDate)=False Then
			       	     currRange.string = &quot;&quot;
			       	     commDate=&quot;&quot;
	            		 MsgBox msgEntrPrdDate
	              		 ThisComponent.CurrentController.setActiveSheet(ThisComponent.Sheets.getByName(&quot;A_Basic_Info&quot;))
		            Else			
			            If checkGrtrThnDate(startDate,matDate) = False Then
				        		   currRange.string = &quot;&quot;
				        		   commDate=&quot;&quot;
				        		   msgStr = msgStr &amp; (row+1)
				        		   MsgBox &quot;Maturity Date in Row &quot; &amp; (row+1) &amp; &quot; should be within or after Return Period.&quot;
				        End If
       				End If
			&apos;----
			
			If purpOfPol=&quot;&quot; then
				MsgBox &quot;Please first select purpose Of policy.&quot;
				currRange.string=&quot;&quot;
			End If
			If commDate &lt;&gt; &quot;&quot; And matDate &lt;&gt; &quot;&quot; and purpOfPol=&quot;Education&quot; Then
                    possibleDate = specificDateBeforeYears(matDate,10)
                    If (checkGrtrThnEqlDate(possibleDate,commDate)) = False Then
                         &apos;MsgBox (&quot;Maturity date should be 10 years greater than date of commencement&quot;)
                         MsgBox (&quot;The difference between Maturity Date and Commencement Date must be equal to or greater than 10 years.&quot;)
                         currRange.string=&quot;&quot;
                    End If
            End If
            
            If commDate &lt;&gt; &quot;&quot; And currRange.string &lt;&gt; &quot;&quot; Then
                    If (checkGrtrThnEqlDate(matDate,commDate)) = True Then
                         &apos;MsgBox (&quot;Maturity date should be greater than or equal to date of commencement&quot;)
                         MsgBox (&quot;Maturity date should be greater than Date of Commencement&quot;)
                         currRange.string=&quot;&quot;
                    End If
            End If					
			
		   End If
		End If   
	&apos;code
endFunction4:	
	sheet.protect(Pwd)
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListS&quot;,&quot;H&quot;,&quot;lMaturityDate_Listener_&quot;,lMaturityDate_Listener,lMaturityDate)
    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
end sub
	
&apos;*************************************
&apos;Add Row Functionality
&apos;L_Computation_of_Insu_Relief
&apos;Case : Wife
&apos;*************************************
Sub addRow_L_Computation_of_Insu_ReliefListWife()
	notCallListener = true
    Call InsertRowsAndFillFormulas(&quot;InsReliefDtls.ListW&quot;)
    &apos;Add All Remove Listeners
    call removeKRAListners(lPinOfInsuranceCompW_Listener,lPinOfInsuranceCompW)
    call removeKRAListners(lPurOfPolicyW_Listener,lPurOfPolicyW)
    call removeKRAListners(lInsuPolicyNumW_Listener,lInsuPolicyNumW)
    call removeKRAListners(lPolicyHolderW_Listener,lPolicyHolderW)
    call removeKRAListners(lCommencementDateW_Listener,lCommencementDateW)
    call removeKRAListners(lMaturityDateW_Listener,lMaturityDateW)
    &apos;Add All Add Listeners
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListW&quot;,&quot;A&quot;,&quot;lPinOfInsuranceCompW_Listener_&quot;,lPinOfInsuranceCompW_Listener,lPinOfInsuranceCompW)
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListW&quot;,&quot;C&quot;,&quot;lPurOfPolicyW_Listener_&quot;,lPurOfPolicyW_Listener,lPurOfPolicyW)
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListW&quot;,&quot;D&quot;,&quot;lInsuPolicyNumW_Listener_&quot;,lInsuPolicyNumW_Listener,lInsuPolicyNumW)
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListW&quot;,&quot;E&quot;,&quot;lPolicyHolderW_Listener_&quot;,lPolicyHolderW_Listener,lPolicyHolderW)
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListW&quot;,&quot;G&quot;,&quot;lCommencementDateW_Listener_&quot;,lCommencementDateW_Listener,lCommencementDateW)
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListW&quot;,&quot;H&quot;,&quot;lMaturityDateW_Listener_&quot;,lMaturityDateW_Listener,lMaturityDateW)
    notCallListener = false
End Sub

&apos;*************************************
&apos;Check on Pin Of Financial Institution
&apos;L_Computation_of_Insu_Relief
&apos;Case : Wife
&apos;*************************************
sub lPinOfInsuranceCompW_Listener_modified(oEv)
	if (notCallListener) then  
		exit Sub  
	end if &apos; Added By KANDARP 
	thisComponent.CurrentController.Frame.ContainerWindow.Enable= False
	call removeKRAListners(lPinOfInsuranceCompW_Listener,lPinOfInsuranceCompW)
	
	&apos;code
		
	oSheet = ThisComponent.CurrentController.getActiveSheet() 
	if  oSheet.name = &quot;Amendment&quot; then
		call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListW&quot;,&quot;A&quot;,&quot;lPinOfInsuranceCompW_Listener_&quot;,lPinOfInsuranceCompW_Listener,lPinOfInsuranceCompW)
	    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
		Exit sub
	End If
	if(oSheet.name&lt;&gt;&quot;A_Basic_Info&quot;) then
	
		Dim startRowNum as Long , endRowNum as Long, startColumnNum as Long , endcolumnNum as Long
	    Dim sheet as Object
	    
	    sheet=ThisComponent.sheets.getByName(&quot;L_Computation_of_Insu_Relief&quot;)
	    Dim dateFlag as Boolean
	    Dim msgStr As string
	
	  	oRange = ThisComponent.NamedRanges.getByName(&quot;InsReliefDtls.ListW&quot;)
	    startRowNum = oRange.getReferredCells().getRangeAddress().StartRow
	    endRowNum = oRange.getReferredCells().getRangeAddress().EndRow
		oColRange = sheet.getCellrangeByName(&quot;A&quot;&amp;(startRowNum+1)&amp;&quot;:A&quot;&amp;(endRowNum+1))
		startRowNum = oColRange.getRangeAddress().StartRow
	    endRowNum = oColRange.getRangeAddress().EndRow
	
		unprotectsheet(&quot;L_Computation_of_Insu_Relief&quot;)
		Dim PINNo As String 
		Dim row As Long
		Dim insurancePolicyNum As String 
		Dim testInsurancePolicyNum as String
		Dim purposeOfPolicyCode as String
		Dim testPurposeOfPolicyCode as String
		Dim pinOfInsurance as String
		Dim testPinOfInsurance as String
		Dim taxPyrWifePINNo as String
		Dim declareWifeIncome as String
		sheet=ThisComponent.sheets.getByName(&quot;A_Basic_Info&quot;)
		taxPyrPINNo= sheet.getCellrangeByName(&quot;RetInf.PIN&quot;).string
		taxPyrWifePINNo=ThisComponent.sheets.getByName(&quot;A_Basic_Info&quot;).getCellrangeByName(&quot;RetInf.SpousePIN&quot;).string
		declareWifeIncome = ThisComponent.sheets.getByName(&quot;A_Basic_Info&quot;).getCellrangeByName(&quot;RetInf.DeclareWifeIncome&quot;).string
	&apos;***	
		currRange = ThisComponent.getCurrentSelection() 
		If Not IsNull(oColRange.queryintersection(currRange.rangeaddress)) and (currRange.supportsService(&quot;com.sun.star.sheet.SheetCell&quot;)) then
			row= currRange.getCellAddress().Row
			PINNo=UCase(currRange.string)
			currRange.string=UCase(PINNo)
			
			If PINNo &lt;&gt; &quot;&quot; Then
			  currRange.string=Ucase(PINNo)
			    If (TestNonIndiPIN(PINNo)) Then
			    	If 	taxPyrPINNo&lt;&gt;&quot;&quot; or taxPyrWifePINNo&lt;&gt;&quot;&quot; then
					    If (Ucase(PINNo) = Ucase(taxPyrPINNo)) Then
					          	msgStr=msgStr &amp; (row+1)
					            currRange.string=&quot;&quot;
					            MsgBox &quot;PIN entered should not be same as Taxpayer&apos;s PIN.&quot;
					    ElseIf UCase(taxPyrWifePINNo) = Ucase(PINNo) and declareWifeIncome&lt;&gt;&quot;No&quot; then
					    		msgStr=msgStr &amp; (row+1)
					            currRange.string=&quot;&quot;
					    		MsgBox msgPinDupWife
					    End If
					 End If
		  	    Else
	   	    		msgStr=msgStr &amp; (row+1)
	   	    		currRange.string=&quot;&quot;
					MsgBox &quot;Please enter Non Individual Pin of Insurance Company in proper format.&quot;
		  	    End If
		     End If
		     
		    sheet=ThisComponent.sheets.getByName(&quot;L_Computation_of_Insu_Relief&quot;)
			insurancePolicyNum=sheet.getCellrangeByName(&quot;D&quot;&amp;(row+1)&amp;&quot;:D&quot;&amp;(row+1)).string
			purposeOfPolicyCode=sheet.getCellrangeByName(&quot;L&quot;&amp;(row+1)&amp;&quot;:L&quot;&amp;(row+1)).string
			pinOfInsurance=sheet.getCellrangeByName(&quot;A&quot;&amp;(row+1)&amp;&quot;:A&quot;&amp;(row+1)).string
			&apos;------------
			if insurancePolicyNum&lt;&gt;&quot;&quot; then	
			
				for i=startRowNum to endRowNum
				 testPinOfInsurance=sheet.getCellByPosition(0,i).string
				 testInsurancePolicyNum=sheet.getCellByPosition(3,i).string
				 testPurposeOfPolicyCode=sheet.getCellByPosition(11,i).string
			&apos;	 result = TestDate(dateVal)
			         if row=i then &apos;Skip
			         Else
				         If testInsurancePolicyNum&lt;&gt;&quot;&quot; and testPurposeOfPolicyCode&lt;&gt;&quot;&quot; and testPinOfInsurance&lt;&gt;&quot;&quot; then
				            If (UCase(testInsurancePolicyNum) = Ucase(insurancePolicyNum)) and (UCase(testPurposeOfPolicyCode) = Ucase(purposeOfPolicyCode)) and (UCase(testPinOfInsurance) = Ucase(pinOfInsurance)) then
				            	MsgBox &quot;The Insurance Policy Number against the same PIN of Insurance Company and Purpose of Policy cannot be same as in Row &quot; &amp; (i+1)
				            	currRange.string=&quot;&quot;
				            	Exit for
				         	End If
					     End If    
					 End If    
			    Next
	
		    
		    
		    &apos;---Self Section PRN Comparision
		    	oRange = ThisComponent.NamedRanges.getByName(&quot;InsReliefDtls.ListS&quot;)
			    startRowNum = oRange.getReferredCells().getRangeAddress().StartRow
			    endRowNum = oRange.getReferredCells().getRangeAddress().EndRow
				oColRange = sheet.getCellrangeByName(&quot;D&quot;&amp;(startRowNum+1)&amp;&quot;:D&quot;&amp;(endRowNum+1))
				startRowNum = oColRange.getRangeAddress().StartRow
			    endRowNum = oColRange.getRangeAddress().EndRow
			    
			    for i=startRowNum to endRowNum
				 testPinOfInsurance=sheet.getCellByPosition(0,i).string
				 testInsurancePolicyNum=sheet.getCellByPosition(3,i).string
				 testPurposeOfPolicyCode=sheet.getCellByPosition(11,i).string
			&apos;	 result = TestDate(dateVal)
			         if row=i then &apos;Skip
			         Else
				         If testInsurancePolicyNum&lt;&gt;&quot;&quot; and testPurposeOfPolicyCode&lt;&gt;&quot;&quot; and testPinOfInsurance&lt;&gt;&quot;&quot; then
				            If (UCase(testInsurancePolicyNum) = Ucase(insurancePolicyNum)) and (UCase(testPurposeOfPolicyCode) = Ucase(purposeOfPolicyCode)) and (UCase(testPinOfInsurance) = Ucase(pinOfInsurance))  then
				            	MsgBox &quot;The Insurance Policy Number against the same PIN of Insurance Company and Purpose of Policy cannot be same as in Row &quot; &amp; (i+1)
				            	currRange.string=&quot;&quot;
				            	Exit for
				         	End If
					     End If    
					 End If    
			    Next
			    
		    &apos;---Self Section PRN Comparision
	     End If
	     End If   	
	   	protectsheet(&quot;L_Computation_of_Insu_Relief&quot;) 
	end If
	
	&apos;code
	
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListW&quot;,&quot;A&quot;,&quot;lPinOfInsuranceCompW_Listener_&quot;,lPinOfInsuranceCompW_Listener,lPinOfInsuranceCompW)
    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
end sub

&apos;*************************************
&apos;Check on purpose Of Ploicy
&apos;L_Computation_of_Insu_Relief
&apos;Case : Wife
&apos;*************************************
sub lPurOfPolicyW_Listener_modified(oEv)
	if (notCallListener) then  
		exit Sub  
	end if &apos; Added By KANDARP 
	thisComponent.CurrentController.Frame.ContainerWindow.Enable= False
	call removeKRAListners(lPurOfPolicyW_Listener,lPurOfPolicyW)
	call removeKRAListners(lCommencementDateW_Listener,lCommencementDateW)
    call removeKRAListners(lMaturityDateW_Listener,lMaturityDateW)
	&apos;code
		
	oSheet = ThisComponent.CurrentController.getActiveSheet() 
	if  oSheet.name = &quot;Amendment&quot; then
		call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListW&quot;,&quot;C&quot;,&quot;lPurOfPolicyW_Listener_&quot;,lPurOfPolicyW_Listener,lPurOfPolicyW)
	    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
		Exit sub
	End If
	if(oSheet.name&lt;&gt;&quot;A_Basic_Info&quot;) then
	
		Dim startRowNum as Long , endRowNum as Long, startColumnNum as Long , endcolumnNum as Long
	    Dim sheet as Object
	    
	    sheet=ThisComponent.sheets.getByName(&quot;L_Computation_of_Insu_Relief&quot;)
	    Dim dateFlag as Boolean
	    Dim msgStr As string
	
	  	oRange = ThisComponent.NamedRanges.getByName(&quot;InsReliefDtls.ListW&quot;)
	    startRowNum = oRange.getReferredCells().getRangeAddress().StartRow
	    endRowNum = oRange.getReferredCells().getRangeAddress().EndRow
		oColRange = sheet.getCellrangeByName(&quot;C&quot;&amp;(startRowNum+1)&amp;&quot;:C&quot;&amp;(endRowNum+1))
		startRowNum = oColRange.getRangeAddress().StartRow
	    endRowNum = oColRange.getRangeAddress().EndRow
	
		unprotectsheet(&quot;L_Computation_of_Insu_Relief&quot;)
		Dim row As Long
		Dim insurancePolicyNum As String 
		Dim testInsurancePolicyNum as String
		Dim purposeOfPolicyCode as String
		Dim testPurposeOfPolicyCode as String
		Dim pinOfInsurance as String
		Dim testPinOfInsurance as String
		
		Dim currRange1 as Object
		Dim currRange2 as Object
		Dim currRange as Object
		Dim purpOfPol As String 
		Dim commDate As String
		Dim matDate as String
		
	&apos;***	
		currRange = ThisComponent.getCurrentSelection() 
		If Not IsNull(oColRange.queryintersection(currRange.rangeaddress)) and (currRange.supportsService(&quot;com.sun.star.sheet.SheetCell&quot;)) then
			row= currRange.getCellAddress().Row 
			
			currRow= row + 1 
			currRange1 = sheet.getCellrangeByName(&quot;G&quot; &amp; (currRow) &amp; &quot;:G&quot; &amp; (currRow))
			currRange2 = sheet.getCellrangeByName(&quot;H&quot; &amp; (currRow) &amp; &quot;:H&quot; &amp; (currRow))	
			purpOfPol = currRange.string
			commDate= currRange1.string
			
			if commDate&lt;&gt;&quot;&quot; and purpOfPol&lt;&gt;&quot;&quot; then
				If purpOfPol=&quot;Health&quot; then
					if checkGrtrThnEqualToDate(commDate,&quot;01/01/2007&quot;) = True then
						MsgBox &quot;Commencement Date should be on or after 1st Jan 2007 for Health&quot;
						currRange1.string=&quot;&quot;
						currRange2.string=&quot;&quot;						
					End If
				ElseIf purpOfPol=&quot;Education&quot; and purpOfPol=&quot;Life&quot; then
					if checkGrtrThnEqualToDate(commDate,&quot;01/06/2003&quot;) = True then
						MsgBox &quot;Commencement Date should be on or after 1st June 2003 for Life and Education&quot;
						currRange1.string=&quot;&quot;
						currRange2.string=&quot;&quot;						
					End If 
				End If	
				If currRange1.string &lt;&gt; &quot;&quot; And currRange2.string &lt;&gt; &quot;&quot; and purpOfPol=&quot;Education&quot; Then
                		    possibleDate = specificDateBeforeYears(currRange2.string,10)
        		            If (checkGrtrThnDate(possibleDate,currRange1.string)) = True Then
		                         &apos;MsgBox (&quot;Maturity date should be 10 years greater than date of commencement&quot;)
		                         MsgBox (&quot;The difference between Maturity Date and Commencement Date must be equal to or greater than 10 years.&quot;)
                    		     currRange1.string=&quot;&quot;
								 currRange2.string=&quot;&quot;
            		        End If
		        End If		
		   End If
			
			insurancePolicyNum=sheet.getCellrangeByName(&quot;D&quot;&amp;(row+1)&amp;&quot;:D&quot;&amp;(row+1)).string
			purposeOfPolicyCode=sheet.getCellrangeByName(&quot;L&quot;&amp;(row+1)&amp;&quot;:L&quot;&amp;(row+1)).string
			pinOfInsurance=sheet.getCellrangeByName(&quot;A&quot;&amp;(row+1)&amp;&quot;:A&quot;&amp;(row+1)).string
			&apos;------------
			if insurancePolicyNum&lt;&gt;&quot;&quot; then	
			
				for i=startRowNum to endRowNum
				 testPinOfInsurance=sheet.getCellByPosition(0,i).string
				 testInsurancePolicyNum=sheet.getCellByPosition(3,i).string
				 testPurposeOfPolicyCode=sheet.getCellByPosition(11,i).string
			&apos;	 result = TestDate(dateVal)
			         if row=i then &apos;Skip
			         Else
				         If testInsurancePolicyNum&lt;&gt;&quot;&quot; and testPurposeOfPolicyCode&lt;&gt;&quot;&quot; and testPinOfInsurance&lt;&gt;&quot;&quot; then
				            If (UCase(testInsurancePolicyNum) = Ucase(insurancePolicyNum)) and (UCase(testPurposeOfPolicyCode) = Ucase(purposeOfPolicyCode)) and (UCase(testPinOfInsurance) = Ucase(pinOfInsurance)) then
				            	MsgBox &quot;The Insurance Policy Number against the same PIN of Insurance Company and Purpose of Policy cannot be same as in Row &quot; &amp; (i+1)
				            	currRange.string=&quot;&quot;
				            	Exit for
				         	End If
					     End If    
					 End If    
			    Next
	
		    
		    
		    &apos;---Self Section PRN Comparision
		    	oRange = ThisComponent.NamedRanges.getByName(&quot;InsReliefDtls.ListS&quot;)
			    startRowNum = oRange.getReferredCells().getRangeAddress().StartRow
			    endRowNum = oRange.getReferredCells().getRangeAddress().EndRow
				oColRange = sheet.getCellrangeByName(&quot;D&quot;&amp;(startRowNum+1)&amp;&quot;:D&quot;&amp;(endRowNum+1))
				startRowNum = oColRange.getRangeAddress().StartRow
			    endRowNum = oColRange.getRangeAddress().EndRow
			    
			    for i=startRowNum to endRowNum
				 testPinOfInsurance=sheet.getCellByPosition(0,i).string
				 testInsurancePolicyNum=sheet.getCellByPosition(3,i).string
				 testPurposeOfPolicyCode=sheet.getCellByPosition(11,i).string
			&apos;	 result = TestDate(dateVal)
			         if row=i then &apos;Skip
			         Else
				         If testInsurancePolicyNum&lt;&gt;&quot;&quot; and testPurposeOfPolicyCode&lt;&gt;&quot;&quot; and testPinOfInsurance&lt;&gt;&quot;&quot; then
				            If (UCase(testInsurancePolicyNum) = Ucase(insurancePolicyNum)) and (UCase(testPurposeOfPolicyCode) = Ucase(purposeOfPolicyCode)) and (UCase(testPinOfInsurance) = Ucase(pinOfInsurance))  then
				            	MsgBox &quot;The Insurance Policy Number against the same PIN of Insurance Company and Purpose of Policy cannot be same as in Row &quot; &amp; (i+1)
				            	currRange.string=&quot;&quot;
				            	Exit for
				         	End If
					     End If    
					 End If    
			    Next
			    
		    &apos;---Self Section PRN Comparision
	     End If   
	     &apos;-------
	     End If   	
	   	protectsheet(&quot;L_Computation_of_Insu_Relief&quot;) 
	end If
	
	&apos;code
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListW&quot;,&quot;G&quot;,&quot;lCommencementDateW_Listener_&quot;,lCommencementDateW_Listener,lCommencementDateW)
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListW&quot;,&quot;H&quot;,&quot;lMaturityDateW_Listener_&quot;,lMaturityDateW_Listener,lMaturityDateW)
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListW&quot;,&quot;C&quot;,&quot;lPurOfPolicyW_Listener_&quot;,lPurOfPolicyW_Listener,lPurOfPolicyW)
    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
end sub

&apos;*************************************
&apos;Check on Insurance Policy Number
&apos;L_Computation_of_Insu_Relief
&apos;Case : Wife
&apos;*************************************
sub lInsuPolicyNumW_Listener_modified(oEv)
	if (notCallListener) then  
		exit Sub  
	end if &apos; Added By KANDARP 
	thisComponent.CurrentController.Frame.ContainerWindow.Enable= False
	call removeKRAListners(lInsuPolicyNumW_Listener,lInsuPolicyNumW)
	
	&apos;code
		
	oSheet = ThisComponent.CurrentController.getActiveSheet() 
	if  oSheet.name = &quot;Amendment&quot; then
		call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListW&quot;,&quot;D&quot;,&quot;lInsuPolicyNumW_Listener_&quot;,lInsuPolicyNumW_Listener,lInsuPolicyNumW)
	    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
		Exit sub
	End If
	if(oSheet.name&lt;&gt;&quot;A_Basic_Info&quot;) then
	
		Dim startRowNum as Long , endRowNum as Long, startColumnNum as Long , endcolumnNum as Long
	    Dim sheet as Object
	    
	    sheet=ThisComponent.sheets.getByName(&quot;L_Computation_of_Insu_Relief&quot;)
	    Dim dateFlag as Boolean
	    Dim msgStr As string
	
	  	oRange = ThisComponent.NamedRanges.getByName(&quot;InsReliefDtls.ListW&quot;)
	    startRowNum = oRange.getReferredCells().getRangeAddress().StartRow
	    endRowNum = oRange.getReferredCells().getRangeAddress().EndRow
		oColRange = sheet.getCellrangeByName(&quot;D&quot;&amp;(startRowNum+1)&amp;&quot;:D&quot;&amp;(endRowNum+1))
		startRowNum = oColRange.getRangeAddress().StartRow
	    endRowNum = oColRange.getRangeAddress().EndRow
	
		unprotectsheet(&quot;L_Computation_of_Insu_Relief&quot;)
		Dim row As Long
		Dim insurancePolicyNum As String 
		Dim testInsurancePolicyNum as String
		Dim purposeOfPolicyCode as String
		Dim testPurposeOfPolicyCode as String
		Dim pinOfInsurance as String
		Dim testPinOfInsurance as String 
	&apos;***	
		currRange = ThisComponent.getCurrentSelection() 
		If Not IsNull(oColRange.queryintersection(currRange.rangeaddress)) and (currRange.supportsService(&quot;com.sun.star.sheet.SheetCell&quot;)) then
			row= currRange.getCellAddress().Row 
			insurancePolicyNum=currRange.string
			currRange.string=UCase(insurancePolicyNum)
			purposeOfPolicyCode=sheet.getCellrangeByName(&quot;L&quot;&amp;(row+1)&amp;&quot;:L&quot;&amp;(row+1)).string
			pinOfInsurance=sheet.getCellrangeByName(&quot;A&quot;&amp;(row+1)&amp;&quot;:A&quot;&amp;(row+1)).string
			&apos;------------
			if insurancePolicyNum&lt;&gt;&quot;&quot; then	
			
				for i=startRowNum to endRowNum
				 testPinOfInsurance=sheet.getCellByPosition(0,i).string
				 testInsurancePolicyNum=sheet.getCellByPosition(3,i).string
				 testPurposeOfPolicyCode=sheet.getCellByPosition(11,i).string
			&apos;	 result = TestDate(dateVal)
			         if row=i then &apos;Skip
			         Else
				         If testInsurancePolicyNum&lt;&gt;&quot;&quot; and testPurposeOfPolicyCode&lt;&gt;&quot;&quot; and testPinOfInsurance&lt;&gt;&quot;&quot; then
				            If (UCase(testInsurancePolicyNum) = Ucase(insurancePolicyNum)) and (UCase(testPurposeOfPolicyCode) = Ucase(purposeOfPolicyCode)) and (UCase(testPinOfInsurance) = Ucase(pinOfInsurance)) then
				            	MsgBox &quot;The Insurance Policy Number against the same PIN of Insurance Company and Purpose of Policy cannot be same as in Row &quot; &amp; (i+1)
				            	currRange.string=&quot;&quot;
				            	Exit for
				         	End If
					     End If    
					 End If    
			    Next
	
		    
		    
		    &apos;---Self Section PRN Comparision
		    	oRange = ThisComponent.NamedRanges.getByName(&quot;InsReliefDtls.ListS&quot;)
			    startRowNum = oRange.getReferredCells().getRangeAddress().StartRow
			    endRowNum = oRange.getReferredCells().getRangeAddress().EndRow
				oColRange = sheet.getCellrangeByName(&quot;D&quot;&amp;(startRowNum+1)&amp;&quot;:D&quot;&amp;(endRowNum+1))
				startRowNum = oColRange.getRangeAddress().StartRow
			    endRowNum = oColRange.getRangeAddress().EndRow
			    
			    for i=startRowNum to endRowNum
				 testPinOfInsurance=sheet.getCellByPosition(0,i).string
				 testInsurancePolicyNum=sheet.getCellByPosition(3,i).string
				 testPurposeOfPolicyCode=sheet.getCellByPosition(11,i).string
			&apos;	 result = TestDate(dateVal)
			         if row=i then &apos;Skip
			         Else
				         If testInsurancePolicyNum&lt;&gt;&quot;&quot; and testPurposeOfPolicyCode&lt;&gt;&quot;&quot; and testPinOfInsurance&lt;&gt;&quot;&quot; then
				            If (UCase(testInsurancePolicyNum) = Ucase(insurancePolicyNum)) and (UCase(testPurposeOfPolicyCode) = Ucase(purposeOfPolicyCode)) and (UCase(testPinOfInsurance) = Ucase(pinOfInsurance))  then
				            	MsgBox &quot;The Insurance Policy Number against the same PIN of Insurance Company and Purpose of Policy cannot be same as in Row &quot; &amp; (i+1)
				            	currRange.string=&quot;&quot;
				            	Exit for
				         	End If
					     End If    
					 End If    
			    Next
			    
		    &apos;---Self Section PRN Comparision
	     End If   
	     End If   	
	   	protectsheet(&quot;L_Computation_of_Insu_Relief&quot;) 
	end If
	
	&apos;code
	
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListW&quot;,&quot;D&quot;,&quot;lInsuPolicyNumW_Listener_&quot;,lInsuPolicyNumW_Listener,lInsuPolicyNumW)
    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
end sub

&apos;*************************************
&apos;Check on Policy Holder
&apos;L_Computation_of_Insu_Relief
&apos;Case : Wife
&apos;*************************************
sub lPolicyHolderW_Listener_modified(oEv)
	if (notCallListener) then  
		exit Sub  
	end if &apos; Added By KANDARP 
	thisComponent.CurrentController.Frame.ContainerWindow.Enable= False
	call removeKRAListners(lPolicyHolderW_Listener,lPolicyHolderW)
	
	&apos;code
		
	oSheet = ThisComponent.CurrentController.getActiveSheet() 
	&apos;*******************************
	&apos;Code Added to restrict Listeners to be called while Amendment
	if  oSheet.name = &quot;Amendment&quot; then
		call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListW&quot;,&quot;E&quot;,&quot;lPolicyHolderW_Listener_&quot;,lPolicyHolderW_Listener,lPolicyHolderW)
	    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
		Exit sub
	End If
	&apos;*******************************
	
	if(oSheet.name&lt;&gt;&quot;A_Basic_Info&quot;) then
		Dim startRowNum as Long , endRowNum as Long, startColumnNum as Long , endcolumnNum as Long
	    oRange = ThisComponent.NamedRanges.getByName(&quot;InsReliefDtls.ListW&quot;)
	    startRowNum = oRange.getReferredCells().getRangeAddress().StartRow
	    endRowNum = oRange.getReferredCells().getRangeAddress().EndRow
		sheet=ThisComponent.sheets.getByName(&quot;L_Computation_of_Insu_Relief&quot;)
		oColRange = sheet.getCellrangeByName(&quot;E&quot;&amp;(startRowNum+1)&amp;&quot;:E&quot;&amp;(endRowNum+1))
		Unprotectsheet(&quot;L_Computation_of_Insu_Relief&quot;)
		Dim usage as String
		Dim msgStr As String
		Dim currRange as Object
		Dim row As Long
	&apos;***
		currRange = ThisComponent.getCurrentSelection() 
		If Not IsNull(oColRange.queryintersection(currRange.rangeaddress)) and (currRange.supportsService(&quot;com.sun.star.sheet.SheetCell&quot;)) then
			usage= currRange.string
			row= currRange.getCellAddress().Row 
	
				If (usage=&quot;Child&quot;) Then
					Unprotect_Range(&quot;L_Computation_of_Insu_Relief&quot;,&quot;F&quot;&amp;(row+1)&amp;&quot;:F&quot;&amp;(row+1))
				else    
					sheet.getCellrangeByName(&quot;H&quot;&amp;(row+1)&amp;&quot;:H&quot;&amp;(row+1)).string=&quot;&quot;
					Protect_Range(&quot;L_Computation_of_Insu_Relief&quot;,&quot;F&quot;&amp;(row+1)&amp;&quot;:F&quot;&amp;(row+1)) 
				End If
		End If
		
	&apos;***	
	  	protectsheet(&quot;L_Computation_of_Insu_Relief&quot;)
	End If
	
	&apos;code
	
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListW&quot;,&quot;E&quot;,&quot;lPolicyHolderW_Listener_&quot;,lPolicyHolderW_Listener,lPolicyHolderW)
    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
end sub

&apos;*************************************
&apos;Check on Commencement Date
&apos;L_Computation_of_Insu_Relief
&apos;Case : Wife
&apos;*************************************
sub lCommencementDateW_Listener_modified(oEv)
	if (notCallListener) then  
		exit Sub  
	end if &apos; Added By KANDARP 
	thisComponent.CurrentController.Frame.ContainerWindow.Enable= False
	call removeKRAListners(lCommencementDateW_Listener,lCommencementDateW)
	
	&apos;code
		
	oSheet = ThisComponent.CurrentController.getActiveSheet() 
	&apos;*******************************
	&apos;Code Added to restrict Listeners to be called while Amendment
	if  oSheet.name = &quot;Amendment&quot; then
		call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListW&quot;,&quot;G&quot;,&quot;lCommencementDateW_Listener_&quot;,lCommencementDateW_Listener,lCommencementDateW)
	    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
		Exit sub
	End If
	&apos;*******************************
	Dim sheet as Object
	sheet=ThisComponent.sheets.getByName(&quot;L_Computation_of_Insu_Relief&quot;)
	 sheet.Unprotect(Pwd)

	Dim startRowNum as Long , endRowNum as Long, startColumnNum as Long , endcolumnNum as Long
    Dim shtName As String
   
    Dim msgStr As string

  	oRange = ThisComponent.NamedRanges.getByName(&quot;InsReliefDtls.ListW&quot;)
    startRowNum = oRange.getReferredCells().getRangeAddress().StartRow
    endRowNum = oRange.getReferredCells().getRangeAddress().EndRow
	oColRange = sheet.getCellrangeByName(&quot;G&quot;&amp;(startRowNum+1)&amp;&quot;:G&quot;&amp;(endRowNum+1))
	startRowNum = oColRange.getRangeAddress().StartRow
    endRowNum = oColRange.getRangeAddress().EndRow

	Dim commDate As String 
	Dim matDate As String
	Dim purpOfPol As String
	Dim currRange as Object
	Dim currRange1 as Object
	Dim currRange2 as Object
		Dim year as String
		Dim month as String
		Dim day as String
		Dim endDt as Object
	Dim startDate as String
	Dim endDate as String
	
	startDate =    ThisComponent.Sheets.getByName(&quot;A_Basic_Info&quot;).getCellrangeByName(&quot;RetInf.RetStartDate&quot;).string
	endDate = ThisComponent.Sheets.getByName(&quot;A_Basic_Info&quot;).getCellrangeByName(&quot;RetInf.RetEndDate&quot;).string
	
&apos;***	
	currRange = ThisComponent.getCurrentSelection() 
	If Not IsNull(oColRange.queryintersection(currRange.rangeaddress)) and (currRange.supportsService(&quot;com.sun.star.sheet.SheetCell&quot;)) then
	row= currRange.getCellAddress().Row 
		commDate= currRange.string
		if commDate&lt;&gt;&quot;&quot; then
			if validateDate(commDate)=false then
				currRange.string=&quot;&quot;
				Msgbox msgDateFrmt
				goto endFunction
			End If
			If (startDate = &quot;&quot;) OR ValidateDate(startDate)=False Or (endDate = &quot;&quot;) Or ValidateDate(endDate)=False Then
			       	     currRange.string = &quot;&quot;
			       	     commDate=&quot;&quot;
	            		 MsgBox msgEntrPrdDate
	              		 ThisComponent.CurrentController.setActiveSheet(ThisComponent.Sheets.getByName(&quot;A_Basic_Info&quot;))
		            Else			
						endDt= Split(endDate,&quot;/&quot;)
	              		year=INT(endDt(2))
	              		month=INT(endDt(1))
	              		day=INT(endDt(0))
			            If lessThnEqualToReturnYr(commDate,year,month,day)=False Then
				        		   currRange.string = &quot;&quot;
				        		   commDate=&quot;&quot;
				        		   msgStr = msgStr &amp; (row+1)
				        		   MsgBox &quot;Commencement Date in Row &quot; &amp; (row+1) &amp; &quot; should be before or within Return Period.&quot;
				        End If
       				End If
			End If
			if commDate&lt;&gt;&quot;&quot; then
				if validateDate(commDate)=false then
					currRange.string=&quot;&quot;
					Msgbox msgDateFrmt
					goto endFunction
				End If
				
				row= currRange.getCellAddress().Row
				currRow= row+1
				currRange1 = sheet.getCellrangeByName(&quot;C&quot; &amp; (currRow) &amp; &quot;:C&quot; &amp; (currRow))
				currRange2 = sheet.getCellrangeByName(&quot;H&quot; &amp; (currRow) &amp; &quot;:H&quot; &amp; (currRow))	
				purpOfPol = currRange1.string
				matDate= currRange2.string
			
					If purpOfPol=&quot;&quot; then
				MsgBox &quot;Please first select purpose Of policy.&quot;
				currRange.string=&quot;&quot;
			ElseIf purpOfPol=&quot;Health&quot; then
					if checkGrtrThnEqualToDate(commDate,&quot;01/01/2007&quot;) = True then
						MsgBox &quot;Commencement Date should be on or after 1st Jan 2007 for Health&quot;
						currRange.string=&quot;&quot;
						currRange2.string=&quot;&quot;
						goto endFunction						
					End If
			ElseIf purpOfPol=&quot;Education&quot; or purpOfPol=&quot;Life&quot; then
					if checkGrtrThnEqualToDate(commDate,&quot;01/06/2003&quot;) = True then
						MsgBox &quot;Commencement Date should be on or after 1st June 2003 for Life and Education&quot;
						currRange.string=&quot;&quot;
						currRange2.string=&quot;&quot;						
						goto endFunction
					End If
			End If
			If commDate &lt;&gt; &quot;&quot; And matDate &lt;&gt; &quot;&quot; and purpOfPol=&quot;Education&quot; Then
                    possibleDate = specificDateBeforeYears(matDate,10)
                    If (checkGrtrThnDate(possibleDate,commDate)) = False Then
                         &apos;MsgBox (&quot;Maturity date should be 10 years greater than date of commencement&quot;)
                         MsgBox (&quot;The difference between Maturity Date and Commencement Date must be equal to or greater than 10 years.&quot;)
                         currRange.string=&quot;&quot;
                    End If
            End If		
            
            If matDate &lt;&gt; &quot;&quot; And currRange.string &lt;&gt; &quot;&quot; Then
                    If (checkGrtrThnDate(matDate,commDate)) = True Then
                         &apos;MsgBox (&quot;Maturity date should be greater than or equal to date of commencement&quot;)
                         MsgBox (&quot;Maturity date should be greater than Date of Commencement&quot;)
                         currRange.string=&quot;&quot;
                    End If
            End If	
			
	  	 End If
		End If   
	
	&apos;code
	endFunction:
	sheet.protect(Pwd)
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListW&quot;,&quot;G&quot;,&quot;lCommencementDateW_Listener_&quot;,lCommencementDateW_Listener,lCommencementDateW)
    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
end sub

&apos;*************************************
&apos;Check on Maturity Date
&apos;L_Computation_of_Insu_Relief
&apos;Case : Wife
&apos;*************************************
sub lMaturityDateW_Listener_modified(oEv)
	if (notCallListener) then  
		exit Sub  
	end if &apos; Added By KANDARP 
	thisComponent.CurrentController.Frame.ContainerWindow.Enable= False
	call removeKRAListners(lMaturityDateW_Listener,lMaturityDateW)
	
	&apos;code
		
	oSheet = ThisComponent.CurrentController.getActiveSheet() 
	&apos;*******************************
	&apos;Code Added to restrict Listeners to be called while Amendment
	if  oSheet.name = &quot;Amendment&quot; then
		call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListW&quot;,&quot;H&quot;,&quot;lMaturityDateW_Listener_&quot;,lMaturityDateW_Listener,lMaturityDateW)
	    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
		Exit sub
	End If
	&apos;*******************************
	Dim sheet as Object
	sheet=ThisComponent.sheets.getByName(&quot;L_Computation_of_Insu_Relief&quot;)
	 sheet.Unprotect(Pwd)

	Dim startRowNum as Long , endRowNum as Long, startColumnNum as Long , endcolumnNum as Long
    Dim shtName As String
    
   
    Dim msgStr As string

  	oRange = ThisComponent.NamedRanges.getByName(&quot;InsReliefDtls.ListW&quot;)
    startRowNum = oRange.getReferredCells().getRangeAddress().StartRow
    endRowNum = oRange.getReferredCells().getRangeAddress().EndRow
	oColRange = sheet.getCellrangeByName(&quot;H&quot;&amp;(startRowNum+1)&amp;&quot;:H&quot;&amp;(endRowNum+1))
	startRowNum = oColRange.getRangeAddress().StartRow
    endRowNum = oColRange.getRangeAddress().EndRow

	Dim commDate As String 
	Dim matDate As String
	Dim purpOfPol As String
	Dim currRange as Object
	Dim currRange1 as Object
	Dim currRange2 as Object
	Dim startDate as String
	Dim endDate as String
	
	startDate =    ThisComponent.Sheets.getByName(&quot;A_Basic_Info&quot;).getCellrangeByName(&quot;RetInf.RetStartDate&quot;).string
	endDate = ThisComponent.Sheets.getByName(&quot;A_Basic_Info&quot;).getCellrangeByName(&quot;RetInf.RetEndDate&quot;).string
	
&apos;***	
	currRange = ThisComponent.getCurrentSelection() 
	If Not IsNull(oColRange.queryintersection(currRange.rangeaddress)) and (currRange.supportsService(&quot;com.sun.star.sheet.SheetCell&quot;)) then
		matDate= currRange.string
		if matDate&lt;&gt;&quot;&quot; then
			if validateDate(matDate)=false then
				currRange.string=&quot;&quot;
				Msgbox msgDateFrmt
				goto endFunction2
			End If
				row= currRange.getCellAddress().Row 
				currRow= row+1
				currRange1 = sheet.getCellrangeByName(&quot;C&quot; &amp; (currRow) &amp; &quot;:C&quot; &amp; (currRow))
				currRange2 = sheet.getCellrangeByName(&quot;G&quot; &amp; (currRow) &amp; &quot;:G&quot; &amp; (currRow))	
				purpOfPol = currRange1.string
				commDate= currRange2.string
			
			&apos;----
			If (startDate = &quot;&quot;) OR ValidateDate(startDate)=False Or (endDate = &quot;&quot;) Or ValidateDate(endDate)=False Then
			       	     currRange.string = &quot;&quot;
			       	     commDate=&quot;&quot;
	            		 MsgBox msgEntrPrdDate
	              		 ThisComponent.CurrentController.setActiveSheet(ThisComponent.Sheets.getByName(&quot;A_Basic_Info&quot;))
		            Else			
			            If checkGrtrThnDate(startDate,maDate) = False Then
				        		   currRange.string = &quot;&quot;
				        		   commDate=&quot;&quot;
				        		   msgStr = msgStr &amp; (row+1)
				        		   MsgBox &quot;Maturity Date in Row &quot; &amp; (row+1) &amp; &quot; should be within or after Return Period.&quot;
				        End If
       				End If
			&apos;----
			
			If purpOfPol=&quot;&quot; then
				MsgBox &quot;Please first select purpose Of policy.&quot;
				currRange.string=&quot;&quot;
			End If
			If commDate &lt;&gt; &quot;&quot; And matDate &lt;&gt; &quot;&quot; and purpOfPol=&quot;Education&quot; Then
                    possibleDate = specificDateBeforeYears(matDate,10)
                    If (checkGrtrThnEqlDate(possibleDate,commDate)) = False Then
                         &apos;MsgBox (&quot;Maturity date should be 10 years greater than date of commencement&quot;)
                         MsgBox (&quot;The difference between Maturity Date and Commencement Date must be equal to or greater than 10 years.&quot;)
                         currRange.string=&quot;&quot;
                    End If
            End If
            
            If commDate &lt;&gt; &quot;&quot; And currRange.string &lt;&gt; &quot;&quot; Then
                    If (checkGrtrThnEqlDate(matDate,commDate)) = True Then
                         &apos;MsgBox (&quot;Maturity date should be greater than or equal to date of commencement&quot;)
                         MsgBox (&quot;Maturity date should be greater than Date of Commencement&quot;)
                         currRange.string=&quot;&quot;
                    End If
            End If					
			
		   End If
		End If   
	&apos;code
	endFunction2:
	sheet.protect(Pwd)
	call addKRAListnersMultiCell(&quot;L_Computation_of_Insu_Relief&quot;,&quot;InsReliefDtls.ListW&quot;,&quot;H&quot;,&quot;lMaturityDateW_Listener_&quot;,lMaturityDateW_Listener,lMaturityDateW)
    thisComponent.CurrentController.Frame.ContainerWindow.Enable= True
end sub
</script:module>